C51 COMPILER V9.54   USART                                                                 01/07/2019 09:54:22 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE USART
OBJECT MODULE PLACED IN .\Objects\USART.obj
COMPILER INVOKED BY: D:\Keil_v5\C51\BIN\C51.EXE Hardware\USART\USART.C OPTIMIZE(8,SPEED) BROWSE INCDIR(.\USER;.\START;.\
                    -Hardware\IO_FUNC;.\Hardware\USART;.\Hardware\TIM) DEBUG OBJECTEXTEND PRINT(.\Listings\USART.lst) TABS(2) OBJECT(.\Object
                    -s\USART.obj)

line level    source

   1          #include "usart.h"
   2          
   3          /***********************************************************************************************
   4          *函数名 ： void MasterUsart_Init(u16 bps)
   5          *函数功能描述 ：初始化主机串口 
   6          *函数参数 ： BPS-波特率
   7          *函数返回值 ： void
   8          *作者 ：WangR
   9          *函数创建日期 ： 20190106
  10          *函数修改日期 ： --
  11          *修改人 ：--
  12          *修改原因 ： --
  13          *版本 ： 1.0
  14          *历史版本 ： --
  15          ***********************************************************************************************/
  16          void MasterUsart_Init(u16 bps)
  17          {
  18   1          ACC = P_SW1;
  19   1          ACC &= ~(S1_S0 | S1_S1);    //S1_S0=0 S1_S1=0
  20   1          P_SW1 = ACC;                //(P3.0/RxD, P3.1/TxD)
  21   1          
  22   1      #if (PARITYBIT == NONE_PARITY)
  23   1          SCON = 0x50;                //8位可变波特率
  24   1      #elif (PARITYBIT == ODD_PARITY) || (PARITYBIT == EVEN_PARITY) || (PARITYBIT == MARK_PARITY)
                  SCON = 0xda;                //9位可变波特率,校验位初始为1
              #elif (PARITYBIT == SPACE_PARITY)
                  SCON = 0xd2;                //9位可变波特率,校验位初始为0
              #endif
  29   1      
  30   1          AUXR = 0x40;                //定时器1为1T模式
  31   1          TMOD = 0x00;                //定时器1为模式0(16位自动重载)
  32   1          TL1 = (65536 - (FOSC/4/bps));   //设置波特率重装值
  33   1          TH1 = (65536 - (FOSC/4/bps))>>8;
  34   1          TR1 = 1;                    //定时器1开始启动
  35   1          ES = 1;                     //使能串口中断
  36   1          EA = 1;
  37   1      }
  38          /***********************************************************************************************
  39          *函数名 ： void MasterUsart_SendByte(u8 byte)
  40          *函数功能描述 ： 主机串口发送一个字节
  41          *函数参数 ： byte--发送数据
  42          *函数返回值 ： void
  43          *作者 ：WangR
  44          *函数创建日期 ： 20190106
  45          *函数修改日期 ： --
  46          *修改人 ：--
  47          *修改原因 ： --
  48          *版本 ： 1.0
  49          *历史版本 ： --
  50          ***********************************************************************************************/
  51          void MasterUsart_SendByte(u8 byte)
  52          {
  53   1          while (usart1_busy);               //等待前面的数据发送完成
C51 COMPILER V9.54   USART                                                                 01/07/2019 09:54:22 PAGE 2   

  54   1          ACC = byte;                  //获取校验位P (PSW.0)
  55   1          if (P)                      //根据P来设置校验位
  56   1          {
  57   2      #if (PARITYBIT == ODD_PARITY)
                      TB8 = 0;                //设置校验位为0
              #elif (PARITYBIT == EVEN_PARITY)
                      TB8 = 1;                //设置校验位为1
              #endif
  62   2          }
  63   1          else
  64   1          {
  65   2      #if (PARITYBIT == ODD_PARITY)
                      TB8 = 1;                //设置校验位为1
              #elif (PARITYBIT == EVEN_PARITY)
                      TB8 = 0;                //设置校验位为0
              #endif
  70   2          }
  71   1          usart1_busy = 1;
  72   1          SBUF = ACC;                 //写数据到UART数据寄存器
  73   1      }
  74          /***********************************************************************************************
  75          *函数名 ： void SlaverUsart_Init(u16 bps)
  76          *函数功能描述 ：初始化从机串口 
  77          *函数参数 ： BPS-波特率
  78          *函数返回值 ： void
  79          *作者 ：WangR
  80          *函数创建日期 ： 20190106
  81          *函数修改日期 ： --
  82          *修改人 ：--
  83          *修改原因 ： --
  84          *版本 ： 1.0
  85          *历史版本 ： --
  86          ***********************************************************************************************/
  87          void SlaverUsart_Init(u16 bps)
  88          {
  89   1      
  90   1          P_SW2 &= ~S3_S0;            //S3_S0=0 (P0.0/RxD3, P0.1/TxD3)
  91   1      //  P_SW2 |= S3_S0;             //S3_S0=1 (P5.0/RxD3_2, P5.1/TxD3_2)
  92   1      
  93   1      #if (PARITYBIT == NONE_PARITY)
  94   1          S3CON = 0x10;               //8位可变波特率
  95   1      #elif (PARITYBIT == ODD_PARITY) || (PARITYBIT == EVEN_PARITY) || (PARITYBIT == MARK_PARITY)
                  S3CON = 0x9a;               //9位可变波特率,校验位初始为1
              #elif (PARITYBIT == SPACE_PARITY)
                  S3CON = 0x92;               //9位可变波特率,校验位初始为0
              #endif
 100   1      
 101   1          T2L = (65536 - (FOSC/4/bps));   //设置波特率重装值
 102   1          T2H = (65536 - (FOSC/4/bps))>>8;
 103   1          AUXR = 0x14;                //T2为1T模式, 并启动定时器2
 104   1          IE2 = 0x08;                 //使能串口3中断
 105   1          EA = 1;
 106   1      
 107   1      }
 108          /***********************************************************************************************
 109          *函数名 ： void SlaverUsart_SendByte(u8 byte)
 110          *函数功能描述 ： 从机串口发送一个字节
 111          *函数参数 ： byte--发送数据
 112          *函数返回值 ： void
 113          *作者 ：WangR
 114          *函数创建日期 ： 20190106
 115          *函数修改日期 ： --
C51 COMPILER V9.54   USART                                                                 01/07/2019 09:54:22 PAGE 3   

 116          *修改人 ：--
 117          *修改原因 ： --
 118          *版本 ： 1.0
 119          *历史版本 ： --
 120          ***********************************************************************************************/
 121          void SlaverUsart_SendByte(u8 byte)
 122          {
 123   1          while (usart3_busy);               //等待前面的数据发送完成
 124   1          ACC = byte;                  //获取校验位P (PSW.0)
 125   1          if (P)                      //根据P来设置校验位
 126   1          {
 127   2      #if (PARITYBIT == ODD_PARITY)
                      S3CON &= ~S3TB8;        //设置校验位为0
              #elif (PARITYBIT == EVEN_PARITY)
                      S3CON |= S3TB8;         //设置校验位为1
              #endif
 132   2          }
 133   1          else
 134   1          {
 135   2      #if (PARITYBIT == ODD_PARITY)
                      S3CON |= S3TB8;         //设置校验位为1
              #elif (PARITYBIT == EVEN_PARITY)
                      S3CON &= ~S3TB8;        //设置校验位为0
              #endif
 140   2          }
 141   1          usart3_busy = 1;
 142   1          S3BUF = ACC;                //写数据到UART3数据寄存器
 143   1      
 144   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    194    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       4
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
